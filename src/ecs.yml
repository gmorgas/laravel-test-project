imports:
  - { resource: 'vendor/symplify/easy-coding-standard/config/set/php70.yaml' }
  - { resource: 'vendor/symplify/easy-coding-standard/config/set/php71.yaml' }
  - { resource: 'vendor//symplify/easy-coding-standard/config/set/psr12.yaml' }

services:

  # TODO: compare section below with clean-code ruleset after upgrading ecs.

  # clean code rules :)

  SlevomatCodingStandard\Sniffs\Variables\UselessVariableSniff: ~

  # function ($var) use ($unused) { return $var; }    →   function ($var) { return $var; }
  SlevomatCodingStandard\Sniffs\Functions\UnusedInheritedVariablePassedToClosureSniff: ~

  # echo "hi";;   →   echo "hi";
  SlevomatCodingStandard\Sniffs\PHP\UselessSemicolonSniff: ~

  # ((new Class))->call()   →     (new Class)->call()
  SlevomatCodingStandard\Sniffs\PHP\UselessParenthesesSniff: ~

  # use short array []
  PhpCsFixer\Fixer\ArrayNotation\ArraySyntaxFixer:
    syntax: short

  # detect dead code
  SlevomatCodingStandard\Sniffs\Classes\UnusedPrivateElementsSniff:

  # drop dead use namespaces
  PhpCsFixer\Fixer\Import\NoUnusedImportsFixer:

  # and sort them A → Z
  PhpCsFixer\Fixer\Import\OrderedImportsFixer:

  # $value;;
  PhpCsFixer\Fixer\Semicolon\NoEmptyStatementFixer:

  # final class { ... protected ... }
  PhpCsFixer\Fixer\ClassNotation\ProtectedToPrivateFixer:

  # continue (2);
  PhpCsFixer\Fixer\ControlStructure\NoUnneededControlParenthesesFixer:

  # { echo 'hi'; }
  PhpCsFixer\Fixer\ControlStructure\NoUnneededCurlyBracesFixer:

  # $var = $foo : $foo ? $bar → $var = $foo ?: $bar
  SlevomatCodingStandard\Sniffs\ControlStructures\RequireShortTernaryOperatorSniff:

  # $var = $var + foo → $var += $foo
  SlevomatCodingStandard\Sniffs\Operators\RequireCombinedAssignmentOperatorSniff:

parameters:

  exclude_files:
    - 'app/Console/Commands/ManualGeneration/*.php'
    - 'app/Jobs/Testing/*.php'
    - 'app/Jobs/Job.php'